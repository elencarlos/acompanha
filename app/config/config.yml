imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@UserBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: pt_BR

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
          admin_skin: "%admin_skin%"
    date:
        timezone: America/Araguaina

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
#user
fos_user:
    db_driver: orm
    firewall_name: main # nombre anterior
    user_class: UFT\UserBundle\Entity\Usuario
    from_email:
        address:        naoresponder@dti.uft.edu.br
        sender_name:    SLU/UFT - Sistema de Login Unificado

services:
    fos_user.doctrine_registry:
        alias: doctrine


# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fr3d_ldap:
    driver:
        host: "%ldap_host%"
        username: "%ldap_username%"
        password: "%ldap_password%"
        baseDn: "%people_basedn%"
#       port:                389    # Optional
#       username:            foo    # Optional
#       password:            bar    # Optional
        bindRequiresDn:      true   # Optional
#       baseDn:              ou=users, dc=host, dc=foo   # Optional
        accountFilterFormat: '%ldap_filter%'
#        accountFilterFormat: (&(uid=%s)(memberOf=cn=Teste2,ou=Group,o=uft,dc=edu,dc=br))
#       optReferrals:        false  # Optional
#       useSsl:              true   # Enable SSL negotiation. Optional
#       useStartTls:         true   # Enable TLS negotiation. Optional
#        accountCanonicalForm: 2
       # ACCTNAME_FORM_BACKSLASH this is only needed if your users have to login with something like HOST\User
#       accountDomainName: HOST
#       accountDomainNameShort: HOST # if you use the Backslash form set both to Hostname than the Username will be converted to HOST\User
    user:
        baseDn: "%ldap_basedn%"
#        filter: '(memberOf=cn=Sistema - SLU,ou=Group,dc=uft,dc=edu,dc=br)'
        attributes:
            - { ldap_attr: uid,  user_method: setUsername }
            - { ldap_attr: mail, user_method: setEmail }
        # Specify ldap attributes mapping [ldap attribute, user object method]
#           - { ldap_attr: uid,  user_method: setUsername } # Default
#           - { ldap_attr: cn,   user_method: setName }     # Optional

#           - { ldap_attr: ...,  user_method: ... }         # Optional
    service:
#       user_manager: fos_user.user_manager          # Overrides default user manager
